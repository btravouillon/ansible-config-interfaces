---
- name: Installing ifupdown
  ansible.builtin.apt:
    name:
      - "{{ ifupdown_package }}"
    state: present
  become: true
  register: result
  until: result is successful
  when: ifupdown_package is defined

- name: Installing Pre-Req Packages
  ansible.builtin.apt:
    name: ["lldpd"]
    state: present
  become: true
  register: result
  until: result is successful
  when: config_install_lldp | bool

- name: Installing bridge-utils
  ansible.builtin.apt:
    name: ["bridge-utils"]
    state: present
  become: true
  register: result
  until: result is successful
  when: network_bridges | length > 0

- name: Installing Bonding Packages
  ansible.builtin.apt:
    name: ["ifenslave"]
    state: present
  become: true
  register: result
  until: result is successful
  when: network_bonds | length > 0

- name: Installing VLAN Packages
  ansible.builtin.apt:
    name: ["vlan"]
    state: present
  become: true
  register: result
  until: result is successful
  when: network_vlans | length > 0

- name: Configuring Defined Interfaces
  ansible.builtin.template:
    src: "{{ config_interface_template }}"
    dest: /etc/network/interfaces
    owner: root
    group: root
    mode: 0644
  register: config_interface
  become: true
  when: network_interfaces | length > 0

- name: Restarting Network Interfaces
  ansible.builtin.shell: bash -c "ifdown {{ item.name }} --force && ifup {{ item.name }} --force"
  become: true
  with_items: "{{ network_interfaces }}"
  when: >
    (enable_configured_interfaces_after_defining or item['enable']) and
    item['configure'] and
    config_interface['changed']

- name: Restarting Network VLANs
  ansible.builtin.shell: bash -c "ifdown {{ item.name }} --force && ifup {{ item.name }} --force"
  become: true
  with_items: "{{ network_vlans }}"
  when: >
    network_vlans | length > 0 and
    (enable_configured_interfaces_after_defining or item['enable']) and
    item['configure'] and
    config_interface['changed']

- name: Restarting Network Bridges
  ansible.builtin.shell: bash -c "ifdown {{ item.name }} --force && ifup {{ item.name }} --force"
  become: true
  with_items: "{{ network_bridges }}"
  when: >
    network_bridges | length > 0 and
    (enable_configured_interfaces_after_defining or item['enable']) and
    item['configure'] and
    config_interface['changed']

- name: Restarting OVS Bridges
  ansible.builtin.shell: bash -c "ifdown {{ item.name }} --force && ifup {{ item.name }} --force"
  become: true
  with_items: "{{ ovs_bridges }}"
  when: >
    ovs_bridges | length > 0 and
    (enable_configured_interfaces_after_defining or item['enable']) and
    item['configure'] and
    config_interface['changed']

- name: Restarting OVS Bonds
  ansible.builtin.shell: bash -c "ifdown {{ item.name }} --force && ifup {{ item.name }} --force"
  become: true
  with_items: "{{ ovs_bonds }}"
  when: >
    ovs_bonds | length > 0 and
    (enable_configured_interfaces_after_defining or item['enable']) and
    item['configure'] and
    config_interface['changed']

- name: Restarting OVS Interfaces
  ansible.builtin.shell: bash -c "ifdown {{ item.name }} --force && ifup {{ item.name }} --force"
  become: true
  with_items: "{{ ovs_interfaces }}"
  when: >
    ovs_interfaces | length > 0 and
    (enable_configured_interfaces_after_defining or item['enable']) and
    item['configure'] and
    config_interface['changed']

- name: Restarting OVS Ports
  ansible.builtin.shell: bash -c "ifdown {{ item.name }} --force && ifup {{ item.name }} --force"
  become: true
  with_items: "{{ ovs_ports }}"
  when: >
    ovs_ports | length > 0 and
    (enable_configured_interfaces_after_defining or item['enable']) and
    item['configure'] and
    config_interface['changed']
